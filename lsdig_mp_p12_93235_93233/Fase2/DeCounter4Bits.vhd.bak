--MÃ³dulo do Contador de 4 bits

library IEEE;
use IEEE.STD_LOGIC_1164.all;
use IEEE.NUMERIC_STD.all;

entity Counter4Bits is
	generic(MAX		: integer := 9);
	port(reset		: in  std_logic;
		  clk			: in  std_logic;
		  enable1	: in  std_logic;
		  enable2	: in  std_logic;
		  valOut		: out std_logic_vector(3 downto 0);
		  RCO	: out std_logic;
		  stopCount : in std_logic);
end Counter4Bits;

architecture RTL of Counter4Bits is

	signal s_value : unsigned(3 downto 0) := to_unsigned(MAX,4); -- Sinal de contagem
	
begin
	process(reset, clk)
	begin	
		if (reset = '1') then
				s_value <= to_unsigned(MAX,s_value'length);
				RCO <= '0';
		elsif (rising_edge(clk)) then
			if ((enable1 = '1') and (enable2 = '1') and (stopCount = '0')) then
				if (to_integer(s_value) = 0) then
					s_value <= to_unsigned(MAX,s_value'length);
					RCO <= '0';
				else
					s_value <= s_value - 1;
					if (to_integer(s_value) = 1) then
						RCO <= '1';
					else
						RCO <= '0';
					end if;
				end if;
			end if;
		end if;	
	end process;
	
	valOut <= std_logic_vector(s_value);
end RTL;